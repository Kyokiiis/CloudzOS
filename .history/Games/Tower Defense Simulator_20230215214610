local LocalPlayer = game:GetService("Players").LocalPlayer;

function GUI()

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
    Name = "Tower Defense Simulator",
    LoadingTitle = "TDS Mash",
    LoadingSubtitle = "by Cloudy Studios",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "ABCD", -- The Discord invite code, do not include discord.gg/
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Sirius Hub",
       Subtitle = "Key System",
       Note = "Join the discord (discord.gg/sirius)",
       FileName = "SiriusKey",
       SaveKey = true,
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = "Hello"
    }
 })

 function MapChange()
    local L = game.ReplicatedStorage.RemoteFunction
    for a, c in pairs(game:GetService('Workspace').Elevators:GetChildren()) do
      local a = require(c.Settings).Type
      local b = c.State.Players
      if a == "Survival" and b.Value <= 0 then
        L:InvokeServer("Elevators", "Enter", c)
        wait(1)
        L:InvokeServer("Elevators", "Leave")
      end
    end
    wait(0.6)
    L:InvokeServer("Elevators", "Leave")
wait(1)
 end

 function UpgradeAll1()
    for index,value in pairs(game.Workspace.Towers:GetChildren()) do
        -- Script generated by R2Sv2
        -- R2Sv2 developed by Luckyxero
    
        local A_1 = "Troops"
        local A_2 = "Upgrade"
        local a7 = "Set"
        local A_3 = 
            {
                ["Troop"] = value 
            }
        local Event = game:GetService("ReplicatedStorage").RemoteFunction
        Event:InvokeServer(A_1, A_2, a7, A_3)
    
    end
    wait(0.1)
 end

 local TabL = Window:CreateTab("Lobby", 4483362458)

 local Section = TabL:CreateSection("Player Loadout Viewer")

local Name = TabL:CreateLabel("Name: ")
local Coins = TabL:CreateLabel("Coins: ")
local Gems = TabL:CreateLabel("Gems: ")
local Level = TabL:CreateLabel("Level: ")
local Troops = TabL:CreateLabel("Troops: ")

local Extra = TabL:CreateSection("How to use")

local Instructions = TabL:CreateParagraph({Title = "Instructions", Content = "just click on someone to see their gems and more"})

local players = game:GetService("Players")
local player = players.LocalPlayer

local mouse = player:GetMouse()

mouse.Button1Down:Connect(function()
    local model = mouse.Target:FindFirstAncestorOfClass('Model')
    
    if model then
        local clickedPlayer = game.Players:GetPlayerFromCharacter(model)
        
        if clickedPlayer then
            local player = game:GetService("Players")[clickedPlayer.Name]
            Name:Set("Name: " .. clickedPlayer.Name)
            -- Player:Set(clickedPlayer.Name)
            Coins:Set("Coins: " .. player['Coins']['Value'])
            Gems:Set("Gems: " .. player['Gems']['Value'])
            Level:Set("Level: " .. player['Level']['Value'])
        
            local args = {
                [1] = "Profiles",
                [2] = "Download",
                [3] = player
            }
            
            local returnedPlayer = game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
            local troopText = "Troops: "
            for i, v in pairs(returnedPlayer.Troops) do
                if i ~= 1 then
                    troopText = troopText .. ", "
                end
                troopText = troopText .. v
            end
            
            Troops:Set(troopText)
        end
    end
end)

local Section = TabL:CreateSection("Lobby")
local Section = TabL:CreateSection("----")

 local Button = TabL:CreateButton({
    Name = "Force Map Change",
    Callback = function()
        Rayfield:Notify({
            Title = "CloudzOS {Rayfield}",
            Content = "Forcing Maps to Change...",
            Duration = 3,
            Image = 4483362458,
         })
        MapChange()
    end,
 })

 local TabG = Window:CreateTab("In-Game", 4483362458)

 local Section = TabG:CreateSection("Main")

 local Button = TabG:CreateButton({
    Name = "Auto-Chain",
    Callback = function()
        loadstring(game:HttpGet("https://banbus.cf/scripts/tdsautochain"))()
    end,
 })


 local Paragraph = TabG:CreateParagraph({Title = "Auto-Chain Info", Content = "Auto-Chain Allows the player to automatically Chain certain towers such as Commanders (Chaining is basically turning on another towers ability as soon as one is turned off) "})

 local Button = TabG:CreateButton({
    Name = "Medic",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/TacoCatBackWardsIsTacoCat/scripts/main/TDS%20Auto%20Medic.lua",true))()
    Rayfield:Notify({
        Title = "CloudzOS {Rayfield}",
        Content = "Suggested to keep Micro Medics off and Min. Stuns to the normal settings (Unless yk what you're doin.)",
        Duration = 6.5,
        Image = 4483362458,
     })
    end,
 })

 local Section = TabG:CreateSection("-- Auto Skip --")

 local Button = TabG:CreateButton({
    Name = "Auto-Skip (Press E)",
    Callback = function()
        Rayfield:Notify({
            Title = "CloudzOS",
            Content = "Press E to toggle on and off Auto-Skip",
            Duration = 6.5,
            Image = 4483362458,
         })

        local StarterGui = game.StarterGui
        
        local gui = game:GetService("Players").LocalPlayer.PlayerGui
        local TweenService = game:GetService"TweenService"
        
        function tweenmsg(txt)
            if gui:FindFirstChild("TweenMsg") then
                gui.TweenMsg:Destroy()
            end

            TweenColor(TextLabel, "TextColor3", 2, Color3.new(1, 0, 0), Color3.new(0, 1, 0)) --Example use of function.

            local tweengui = Instance.new("ScreenGui")
            tweengui.Name = "TweenMsg"
            tweengui.Parent = gui
            
            local tween = Instance.new("TextLabel")
            tween.Parent = tweengui
            tween.Position = UDim2.new(0.5,0,1.1,0)
            tween.TextSize = 20
            tween.Font = Enum.Font.SourceSansBold;
            
            tween.Text = txt
            TweenService:Create(tween, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5,0,0.82,0)}):Play() --0.625
            wait(0.7)
            TweenService:Create(tween, TweenInfo.new(0.7, Enum.EasingStyle.Quint, Enum.EasingDirection.In), {Position = UDim2.new(0.5,0,1.2,0)}):Play() --0.625
            wait(0.7)
            tweengui:Destroy()
        end
        
        game:GetService("UserInputService").InputBegan:Connect(function(input, chatting)
        if input.KeyCode == Enum.KeyCode.E and not chatting then
            if e == true then
                    e = false
                tweenmsg("Disabled Auto Skip!")
            else
                e = true
                tweenmsg("Enabled Auto Skip!")
            end
        end
        end)
        
        while true do wait(0.1)
            if e == true then
                game.ReplicatedStorage.RemoteEvent:FireServer("Waves","Skip")
            end
        end
    end,
 })
 --
 local Section = TabG:CreateSection("-- Auto Abilites --")
 local Button = TabG:CreateButton({
    Name = "Enable Abilties (ONCE)",
    Callback = function()
        for i,v in pairs(game:GetService("Workspace").Towers:GetChildren()) do 
            if v:FindFirstChild("Owner") then 
            if v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Commander" then
                game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Troops","Abilities","Activate",{["Troop"] = v,["Name"] = "Call Of Arms"})
            elseif v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Swarmer" then
                game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Troops","Abilities","Activate",{["Troop"] = v,["Name"] = "Swarm"})
            elseif v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Gladiator" then
                game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Troops","Abilities","Activate",{["Troop"] = v,["Name"] = "Warrior's Call"})
            end
        end
        end
    end,
 })

 local ToggleA = TabG:CreateToggle({
    Name = "Auto-Enable Abilites",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        if Value == true then
            Rayfield:Notify({
                Title = "CloudzOS {Rayfield}",
                Content = "Auto-Abilites has been Enabled!",
                Duration = 6.5,
                Image = 4483362458,
             })
        else
            Rayfield:Notify({
                Title = "CloudzOS {Rayfield}",
                Content = "Auto-Abilites has been Disabled!",
                Duration = 6.5,
                Image = 4483362458,
             })
        end
    end,
 })
 local Section = TabG:CreateSection("-- Auto Upgrade --")
 --
 local Button = TabG:CreateButton({
    Name = "Upgrade All Towers Once",
    Callback = function()
        UpgradeAll1()
    end,
 })

 local ToggleV = TabG:CreateToggle({
    Name = "Auto Upgrade All Towers",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        if Value == true then
            Rayfield:Notify({
                Title = "CloudzOS {Rayfield}",
                Content = "Auto-Upgrade has been Enabled!",
                Duration = 6.5,
                Image = 4483362458,
             })
        else
            Rayfield:Notify({
                Title = "CloudzOS {Rayfield}",
                Content = "Auto-Upgrade has been Disabled!",
                Duration = 6.5,
                Image = 4483362458,
             })
        end
    end,
 })

 coroutine.wrap(function()
 while true do
    wait(0.1)
 while ToggleV.CurrentValue do
 for index,value in pairs(game.Workspace.Towers:GetChildren()) do
    -- Script generated by R2Sv2
    -- R2Sv2 developed by Luckyxero

    local A_1 = "Troops"
    local A_2 = "Upgrade"
    local a7 = "Set"
    local A_3 = 
        {
            ["Troop"] = value 
        }
    local Event = game:GetService("ReplicatedStorage").RemoteFunction
    Event:InvokeServer(A_1, A_2, a7, A_3)

end
wait(0.1)
end
end
end)()

coroutine.wrap(function()
    while true do
        wait(0.1)
        while ToggleA.CurrentValue do
            wait(1)
            for _, v in ipairs(game:GetService("Workspace").Towers:GetChildren()) do
	            if v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Commander" then
                --
	            if v.Target.Value == nil then
                else
                    game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Troops","Abilities","Activate",{["Troop"] = v,["Name"] = "Call Of Arms"})
                end
                --
                elseif v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Swarmer" then
                --
                    if v.Target.Value == nil then
                    else
                        game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Troops","Abilities","Activate",{["Troop"] = v,["Name"] = "Swarm"})
                    end
                --
                elseif v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Gladiator" then
                --
                    if v.Target.Value == nil then
                    else
                    game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Troops","Abilities","Activate",{["Troop"] = v,["Name"] = "Warrior's Call"})
                    end
                --
                end
            end
        end
   end
end)()

end

GUI()

LocalPlayer.OnTeleport:Connect(function(State)
    if game.PlaceId == 3260590327 or 5591597781 then
    if State == Enum.TeleportState.InProgress then
        syn.queue_on_teleport([[
            loadstring(game:HttpGet('https://raw.githubusercontent.com/Kyokiiis/CloudzOS/main/Games./Tower%20Defense%20Simulator',true))()
        ]])
    end
    end
end)
